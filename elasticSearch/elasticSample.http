PUT http://localhost:9200/megacorp/employee/1
Content-Type: application/json

{
  "first_name" : "John",
  "last_name" :  "Smith",
  "age" :        25,
  "about" :      "I love to go rock climbing",
  "interests": [ "sports", "music" ]
}

###

PUT http://localhost:9200/megacorp/employee/2
Content-Type: application/json

{
  "first_name" :  "Jane",
  "last_name" :   "Smith",
  "age" :         32,
  "about" :       "I like to collect rock albums",
  "interests":  [ "music" ]
}

###

PUT http://localhost:9200/megacorp/employee/3
Content-Type: application/json

{
  "first_name" :  "Douglas",
  "last_name" :   "Fir",
  "age" :         35,
  "about":        "I like to build cabinets",
  "interests":  [ "forestry" ]
}

###
PUT http://localhost:9200/megacorp/_mapping/employee
Content-Type: application/json

{
  "employee": {
    "properties": {
      "interests": {
        "type": "text",
        "fielddata": true
      }
    }
  }
}

###

GET http://localhost:9200/megacorp/employee/_search?q=last_name:Smith

###
#Exemplo chamada com agregação fara a uma agregação com os maiores interreses
#
GET http://localhost:9200/megacorp/employee/_search
Content-Type: application/json

{
  "aggs": {
    "all_interests": {
      "terms": { "field": "interests" }
    }
  }
}

###
###
#Exemplo chamada com agregação fara a uma agregação com os maiores interreses, filtrando por smith
#
GET http://localhost:9200/megacorp/employee/_search
Content-Type: application/json

{
  "query": {
    "match": {
      "last_name": "smith"
    }
  },
  "aggs": {
    "all_interests": {
      "terms": {
        "field": "interests"
      }
    }
  }
}

###
#Também é possível fazer algo como cálcular a idade média dos funcionários que compartilham um interesse particular:
GET http://localhost:9200/megacorp/employee/_search
Content-Type: application/json

{
  "aggs" : {
    "all_interests" : {
      "terms" : { "field" : "interests" },
      "aggs" : {
        "avg_age" : {
          "avg" : { "field" : "age" }
        }
      }
    }
  }
}

###
#Essa pesquisa simples retorna todos os documentos que contêm a palavra mary
GET http://localhost:9200/_search?q=mary
###
#Também é possível fazer algo como cálcular a idade média dos funcionários que compartilham um interesse particular:
GET http://localhost:9200/_search?q=%2Bname%3Ajohn+%2Btweet%3Amary
###
#Também é possível fazer algo como cálcular a idade média dos funcionários que compartilham um interesse particular:
GET http://localhost:9200/_all/tweet/_search?q=tweet:elasticsearch
###
#Também é possível fazer algo como cálcular a idade média dos funcionários que compartilham um interesse particular:
GET http://localhost:9200/_search?q=%2Bname%3A(mary+john)+%2Bdate%3A%3E2014-09-10+%2B(aggregations+geo)
###
#Verificar indice
GET http://localhost:9200/tweet


###
#Exemplo chamada com filter e match all
GET http://localhost:9200/tweet/_search
Content-Type: application/json

{
  "query": {
    "bool": {
      "must": {
        "match_all": {}
      },
      "filter": {
        "term": {
          "user_id": 2
        }
      }
    }
  },
  "_source": [
    "tweet"
  ]
}

###
#Exemplo chamada com filter should(or)
GET http://localhost:9200/tweet/_search
Content-Type: application/json

{
  "query": {
    "bool": {
      "must": {
        "match_all": {}
      },
      "filter": {
        "bool": {
          "should": [
            {
              "term": {
                "date": "2014-09-24"
              }
            },
            {
              "term": {
                "name.keyword": "John Smith"
              }
            }
          ]
        }
      }
    }
  }
}


###
#Exemplo chamada com filter must (and)
GET http://localhost:9200/tweet/_search
Content-Type: application/json

{
  "query": {
    "bool": {
      "must": {
        "match_all": {}
      },
      "filter": {
        "bool": {
          "must": [
            {
              "term": {
                "date": "2014-09-24"
              }
            },
            {
              "term": {
                "name.keyword": "John Smith"
              }
            }
          ]
        }
      }
    }
  }
}


###
#Exemplo chamada com filter constant score
GET http://localhost:9200/tweet/_search
Content-Type: application/json

{
  "query": {
    "constant_score": {
      "filter": {
        "bool": {
          "must": [
            {
              "term": {
                "date": "2014-09-22"
              }
            },
            {
              "term": {
                "name.keyword": "John Smith"
              }
            }
          ]
        }
      }
    }
  }
}

###
#Exemplo chamada com filter constant score e varios terms
GET http://localhost:9200/tweet/_search
Content-Type: application/json

{
  "query": {
    "constant_score": {
      "filter": {
        "bool": {
          "must": [
            {
              "terms": {
                "date": ["2014-09-22", "2014-09-18"]
              }
            },
            {
              "term": {
                "name.keyword": "John Smith"
              }
            }
          ]
        }
      }
    }
  }
}


###
#Exemplo chamada com filter constant score e range date
GET http://localhost:9200/tweet/_search
Content-Type: application/json

{
  "query": {
    "constant_score": {
      "filter": {
        "bool": {
          "must": [
            {"range": {
              "date" : {
                "gt" : "2014-09-15",
                "lt" : "2014-09-24"
              }
            }},
            {
              "term": {
                "name.keyword": "John Smith"
              }
            }
          ]
        }
      }
    }
  }
}